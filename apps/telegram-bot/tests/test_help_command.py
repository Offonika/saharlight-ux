import pytest
from types import SimpleNamespace

import diabetes.common_handlers as handlers


class DummyMessage:
    def __init__(self):
        self.replies = []
        self.kwargs = []

    async def reply_text(self, text, **kwargs):
        self.replies.append(text)
        self.kwargs.append(kwargs)


@pytest.mark.asyncio
async def test_help_includes_new_features():
    """Ensure /help mentions wizard, smart-input and edit features."""

    message = DummyMessage()
    update = SimpleNamespace(message=message)
    context = SimpleNamespace()

    await handlers.help_command(update, context)

    assert message.kwargs[0]["reply_markup"] == handlers.menu_keyboard
    text = message.replies[0]
    assert "üÜï –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n" in text
    assert "‚Ä¢ ‚ú® –ú–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ\n" in text
    assert "‚Ä¢ üïπ –ë—ã—Å—Ç—Ä—ã–π –≤–≤–æ–¥ (smart-input)\n" in text
    assert "‚Ä¢ ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π\n\n" in text


@pytest.mark.asyncio
async def test_help_includes_security_block():
    """Ensure /help mentions security settings."""

    message = DummyMessage()
    update = SimpleNamespace(message=message)
    context = SimpleNamespace()

    await handlers.help_command(update, context)

    text = message.replies[0]
    assert "üîî –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:\n" in text
    assert "–ü–æ—Ä–æ–≥–∏" in text
    assert "SOS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" in text
    assert "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è" in text
    assert "/hypoalert" in text
    assert "/profile" in text


@pytest.mark.asyncio
async def test_help_lists_reminder_commands_and_menu_button():
    """Ensure reminder commands and menu button are documented."""

    message = DummyMessage()
    update = SimpleNamespace(message=message)
    context = SimpleNamespace()

    await handlers.help_command(update, context)

    text = message.replies[0]
    assert "/reminders - —Å–ø–∏—Å–æ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π\n" in text
    assert "/addreminder - –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n" in text
    assert "/delreminder - —É–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\n" in text
    assert "‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è\n" in text


@pytest.mark.asyncio
async def test_help_lists_sos_contact_command():
    """Ensure /help documents SOS contact configuration."""

    message = DummyMessage()
    update = SimpleNamespace(message=message)
    context = SimpleNamespace()

    await handlers.help_command(update, context)

    text = message.replies[0]
    assert "/soscontact ‚Äî –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è SOS-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n" in text
