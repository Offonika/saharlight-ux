# file: .github/workflows/lovable-sync.yml
name: Sync Lovable UI into Monorepo

on:
  push:
    branches: [ lovable ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  TARGET_BRANCH: main            # <-- целевая ветка для PR
  SYNC_INDEX_HTML: 'false'      # true — если надо разово подтянуть index.html
  SYNC_OPENAPI: 'false'         # true — если нужно тянуть openapi.yaml (обычно false)
  SYNC_BRANCH_PREFIX: lovable-sync

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (lovable)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: lovable

      - name: Prepare tar snapshot of sources from lovable
        run: |
          mkdir -p /tmp/lovable_snapshot
          [ -d src ] && tar -C . -cf /tmp/lovable_snapshot/src.tar src || true
          [ -d public ] && tar -C . -cf /tmp/lovable_snapshot/public.tar public || true
          [ -d libs/ts-sdk ] && tar -C libs -cf /tmp/lovable_snapshot/ts-sdk.tar ts-sdk || true
          if [ "${{ env.SYNC_OPENAPI }}" = "true" ] && [ -f libs/contracts/openapi.yaml ]; then
            mkdir -p /tmp/lovable_snapshot/contracts && cp libs/contracts/openapi.yaml /tmp/lovable_snapshot/contracts/openapi.yaml
          fi
          if [ "${{ env.SYNC_INDEX_HTML }}" = "true" ] && [ -f index.html ]; then
            cp index.html /tmp/lovable_snapshot/index.html
          fi

      - name: Switch to target branch from origin
        run: |
          git fetch --all --prune
          git checkout -B "${{ env.SYNC_BRANCH_PREFIX }}-${GITHUB_SHA}" "origin/${{ env.TARGET_BRANCH }}"

      - name: Restore snapshot into monorepo layout
        run: |
          set -e
          sudo apt-get update && sudo apt-get install -y rsync
          # src → services/webapp/ui/src
          if [ -f /tmp/lovable_snapshot/src.tar ]; then
            rm -rf services/webapp/ui/src
            mkdir -p services/webapp/ui
            tar -xf /tmp/lovable_snapshot/src.tar -C services/webapp/ui
          fi
          # public → services/webapp/ui/public
          if [ -f /tmp/lovable_snapshot/public.tar ]; then
            rm -rf services/webapp/ui/public
            mkdir -p services/webapp/ui
            tar -xf /tmp/lovable_snapshot/public.tar -C services/webapp/ui
          fi
          # libs/ts-sdk → libs/ts-sdk
          if [ -f /tmp/lovable_snapshot/ts-sdk.tar ]; then
            rm -rf libs/ts-sdk
            mkdir -p libs
            tar -xf /tmp/lovable_snapshot/ts-sdk.tar -C libs
          fi
          # (опц) libs/contracts/openapi.yaml
          if [ -f /tmp/lovable_snapshot/contracts/openapi.yaml ]; then
            mkdir -p libs/contracts
            cp /tmp/lovable_snapshot/contracts/openapi.yaml libs/contracts/openapi.yaml
          fi
          # (опц) index.html → services/webapp/ui/index.html
          if [ -f /tmp/lovable_snapshot/index.html ]; then
            mkdir -p services/webapp/ui
            cp /tmp/lovable_snapshot/index.html services/webapp/ui/index.html
          fi

      - name: Show diff
        run: |
          git status
          git --no-pager diff --stat || true

      - name: Guard changed paths
        run: |
          git fetch origin ${{ env.TARGET_BRANCH }}
          CHANGED=$(git diff --name-only remotes/origin/${{ env.TARGET_BRANCH }}...HEAD)
          echo "$CHANGED" | awk '{print " - " $0}'
          echo "$CHANGED" | grep -E '^(services/webapp/ui/(src|public)/|libs/ts-sdk/)' || {
            echo "::error ::Changes outside allowed paths detected"
            exit 1
          }

      - name: Build webapp UI
        working-directory: services/webapp/ui
        run: |
          npm ci
          npm run typecheck || true
          npm run build

      - name: Commit changes
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet; then
            git add -A
            git commit -m "chore(ui): sync from lovable @ ${GITHUB_SHA}"
          else
            echo "No changes to commit."
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.SYNC_BRANCH_PREFIX }}-${{ github.sha }}
          base: ${{ env.TARGET_BRANCH }}
          title: "chore(ui): sync from lovable @ ${{ github.sha }}"
          body: |
            This PR syncs UI (src/, public/) and ts-sdk from the `lovable` branch.
            Options:
            - SYNC_INDEX_HTML=${{ env.SYNC_INDEX_HTML }}
            - SYNC_OPENAPI=${{ env.SYNC_OPENAPI }}
          labels: |
            webapp-sync
          draft: false
