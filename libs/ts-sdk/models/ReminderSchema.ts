/* tslint:disable */
/* eslint-disable */
/**
 * Diabetes Assistant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReminderSchema
 */
export interface ReminderSchema {
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    telegramId: number;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof ReminderSchema
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof ReminderSchema
     */
    time?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    intervalHours?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    minutesAfter?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof ReminderSchema
     */
    isEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    orgId?: number | null;
}

/**
 * Check if a given object implements the ReminderSchema interface.
 */
export function instanceOfReminderSchema(value: object): value is ReminderSchema {
    if (!('telegramId' in value) || value['telegramId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ReminderSchemaFromJSON(json: any): ReminderSchema {
    return ReminderSchemaFromJSONTyped(json, false);
}

export function ReminderSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReminderSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'telegramId': json['telegram_id'],
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'],
        'time': json['time'] == null ? undefined : json['time'],
        'intervalHours': json['interval_hours'] == null ? undefined : json['interval_hours'],
        'minutesAfter': json['minutes_after'] == null ? undefined : json['minutes_after'],
        'isEnabled': json['is_enabled'] == null ? undefined : json['is_enabled'],
        'orgId': json['org_id'] == null ? undefined : json['org_id'],
    };
}

export function ReminderSchemaToJSON(json: any): ReminderSchema {
    return ReminderSchemaToJSONTyped(json, false);
}

export function ReminderSchemaToJSONTyped(value?: ReminderSchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'telegram_id': value['telegramId'],
        'id': value['id'],
        'type': value['type'],
        'time': value['time'],
        'interval_hours': value['intervalHours'],
        'minutes_after': value['minutesAfter'],
        'is_enabled': value['isEnabled'],
        'org_id': value['orgId'],
    };
}

