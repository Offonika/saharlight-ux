/* tslint:disable */
/* eslint-disable */
/**
 * Diabetes Assistant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScheduleKind } from './ScheduleKind';
import {
    ScheduleKindFromJSON,
    ScheduleKindFromJSONTyped,
    ScheduleKindToJSON,
    ScheduleKindToJSONTyped,
} from './ScheduleKind';
import type { ReminderType } from './ReminderType';
import {
    ReminderTypeFromJSON,
    ReminderTypeFromJSONTyped,
    ReminderTypeToJSON,
    ReminderTypeToJSONTyped,
} from './ReminderType';

/**
 * 
 * @export
 * @interface ReminderSchema
 */
export interface ReminderSchema {
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    telegramId: number;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    id?: number | null;
    /**
     * 
     * @type {ReminderType}
     * @memberof ReminderSchema
     */
    type: ReminderType;
    /**
     * 
     * @type {string}
     * @memberof ReminderSchema
     */
    title?: string | null;
    /**
     * 
     * @type {ScheduleKind}
     * @memberof ReminderSchema
     */
    kind?: ScheduleKind;
    /**
     * 
     * @type {string}
     * @memberof ReminderSchema
     */
    time?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    intervalMinutes?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    minutesAfter?: number | null;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    intervalHours?: number | null;
    /**
     * 
     * @type {Set<number>}
     * @memberof ReminderSchema
     */
    daysOfWeek?: Set<number> | null;
    /**
     * 
     * @type {boolean}
     * @memberof ReminderSchema
     */
    isEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ReminderSchema
     */
    orgId?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof ReminderSchema
     */
    nextAt?: Date | null;
}

/**
 * Check if a given object implements the ReminderSchema interface.
 */
export function instanceOfReminderSchema(value: object): value is ReminderSchema {
    if (!('telegramId' in value) || value['telegramId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ReminderSchemaFromJSON(json: any): ReminderSchema {
    return ReminderSchemaFromJSONTyped(json, false);
}

export function ReminderSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReminderSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'telegramId': json['telegramId'],
        'id': json['id'] == null ? undefined : json['id'],
        'type': ReminderTypeFromJSON(json['type']),
        'title': json['title'] == null ? undefined : json['title'],
        'kind': json['kind'] == null ? undefined : ScheduleKindFromJSON(json['kind']),
        'time': json['time'] == null ? undefined : json['time'],
        'intervalMinutes': json['intervalMinutes'] == null ? undefined : json['intervalMinutes'],
        'minutesAfter': json['minutesAfter'] == null ? undefined : json['minutesAfter'],
        'intervalHours': json['intervalHours'] == null ? undefined : json['intervalHours'],
        'daysOfWeek': json['daysOfWeek'] == null ? undefined : new Set(json['daysOfWeek']),
        'isEnabled': json['isEnabled'] == null ? undefined : json['isEnabled'],
        'orgId': json['orgId'] == null ? undefined : json['orgId'],
        'nextAt': json['nextAt'] == null ? undefined : (new Date(json['nextAt'])),
    };
}

export function ReminderSchemaToJSON(json: any): ReminderSchema {
    return ReminderSchemaToJSONTyped(json, false);
}

export function ReminderSchemaToJSONTyped(value?: ReminderSchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'telegramId': value['telegramId'],
        'id': value['id'],
        'type': ReminderTypeToJSON(value['type']),
        'title': value['title'],
        'kind': ScheduleKindToJSON(value['kind']),
        'time': value['time'],
        'intervalMinutes': value['intervalMinutes'],
        'minutesAfter': value['minutesAfter'],
        'intervalHours': value['intervalHours'],
        'daysOfWeek': value['daysOfWeek'] == null ? undefined : Array.from(value['daysOfWeek'] as Set<any>),
        'isEnabled': value['isEnabled'],
        'orgId': value['orgId'],
        'nextAt': value['nextAt'] === null ? null : ((value['nextAt'] as any)?.toISOString()),
    };
}

