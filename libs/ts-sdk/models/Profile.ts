/* tslint:disable */
/* eslint-disable */
/**
 * Diabetes Assistant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    telegramId: number;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    icr: number;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    cf: number;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    target: number;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    low: number;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    high: number;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    quietStart?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    quietEnd?: string;
    /**
     * 
     * @type {string}
     * @memberof Profile
     */
    sosContact?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof Profile
     */
    sosAlertsEnabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    orgId?: number | null;
}

/**
 * Check if a given object implements the Profile interface.
 */
export function instanceOfProfile(value: object): value is Profile {
    if (!('telegramId' in value) || value['telegramId'] === undefined) return false;
    if (!('icr' in value) || value['icr'] === undefined) return false;
    if (!('cf' in value) || value['cf'] === undefined) return false;
    if (!('target' in value) || value['target'] === undefined) return false;
    if (!('low' in value) || value['low'] === undefined) return false;
    if (!('high' in value) || value['high'] === undefined) return false;
    return true;
}

export function ProfileFromJSON(json: any): Profile {
    return ProfileFromJSONTyped(json, false);
}

export function ProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): Profile {
    if (json == null) {
        return json;
    }
    return {
        
        'telegramId': json['telegramId'],
        'icr': json['icr'],
        'cf': json['cf'],
        'target': json['target'],
        'low': json['low'],
        'high': json['high'],
        'quietStart': json['quietStart'] == null ? undefined : json['quietStart'],
        'quietEnd': json['quietEnd'] == null ? undefined : json['quietEnd'],
        'sosContact': json['sosContact'] == null ? undefined : json['sosContact'],
        'sosAlertsEnabled': json['sosAlertsEnabled'] == null ? undefined : json['sosAlertsEnabled'],
        'orgId': json['orgId'] == null ? undefined : json['orgId'],
    };
}

export function ProfileToJSON(json: any): Profile {
    return ProfileToJSONTyped(json, false);
}

export function ProfileToJSONTyped(value?: Profile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'telegramId': value['telegramId'],
        'icr': value['icr'],
        'cf': value['cf'],
        'target': value['target'],
        'low': value['low'],
        'high': value['high'],
        'quietStart': value['quietStart'],
        'quietEnd': value['quietEnd'],
        'sosContact': value['sosContact'],
        'sosAlertsEnabled': value['sosAlertsEnabled'],
        'orgId': value['orgId'],
    };
}

