/* tslint:disable */
/* eslint-disable */
/**
 * Diabetes Assistant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProfileSettingsOut
 */
export interface ProfileSettingsOut {
    /**
     * 
     * @type {string}
     * @memberof ProfileSettingsOut
     */
    timezone: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileSettingsOut
     */
    timezoneAuto: boolean;
    /**
     * 
     * @type {number}
     * @memberof ProfileSettingsOut
     */
    dia: number;
    /**
     * 
     * @type {number}
     * @memberof ProfileSettingsOut
     */
    roundStep: number;
    /**
     * 
     * @type {string}
     * @memberof ProfileSettingsOut
     */
    carbUnits: ProfileSettingsOutCarbUnitsEnum;
    /**
     * 
     * @type {number}
     * @memberof ProfileSettingsOut
     */
    gramsPerXe: number;
    /**
     * 
     * @type {string}
     * @memberof ProfileSettingsOut
     */
    sosContact?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ProfileSettingsOut
     */
    sosAlertsEnabled: boolean;
}


/**
 * @export
 */
export const ProfileSettingsOutCarbUnitsEnum = {
    G: 'g',
    Xe: 'xe'
} as const;
export type ProfileSettingsOutCarbUnitsEnum = typeof ProfileSettingsOutCarbUnitsEnum[keyof typeof ProfileSettingsOutCarbUnitsEnum];


/**
 * Check if a given object implements the ProfileSettingsOut interface.
 */
export function instanceOfProfileSettingsOut(value: object): value is ProfileSettingsOut {
    if (!('timezone' in value) || value['timezone'] === undefined) return false;
    if (!('timezoneAuto' in value) || value['timezoneAuto'] === undefined) return false;
    if (!('dia' in value) || value['dia'] === undefined) return false;
    if (!('roundStep' in value) || value['roundStep'] === undefined) return false;
    if (!('carbUnits' in value) || value['carbUnits'] === undefined) return false;
    if (!('gramsPerXe' in value) || value['gramsPerXe'] === undefined) return false;
    if (!('sosAlertsEnabled' in value) || value['sosAlertsEnabled'] === undefined) return false;
    return true;
}

export function ProfileSettingsOutFromJSON(json: any): ProfileSettingsOut {
    return ProfileSettingsOutFromJSONTyped(json, false);
}

export function ProfileSettingsOutFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileSettingsOut {
    if (json == null) {
        return json;
    }
    return {
        
        'timezone': json['timezone'],
        'timezoneAuto': json['timezoneAuto'],
        'dia': json['dia'],
        'roundStep': json['roundStep'],
        'carbUnits': json['carbUnits'],
        'gramsPerXe': json['gramsPerXe'],
        'sosContact': json['sosContact'] == null ? undefined : json['sosContact'],
        'sosAlertsEnabled': json['sosAlertsEnabled'],
    };
}

export function ProfileSettingsOutToJSON(json: any): ProfileSettingsOut {
    return ProfileSettingsOutToJSONTyped(json, false);
}

export function ProfileSettingsOutToJSONTyped(value?: ProfileSettingsOut | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timezone': value['timezone'],
        'timezoneAuto': value['timezoneAuto'],
        'dia': value['dia'],
        'roundStep': value['roundStep'],
        'carbUnits': value['carbUnits'],
        'gramsPerXe': value['gramsPerXe'],
        'sosContact': value['sosContact'],
        'sosAlertsEnabled': value['sosAlertsEnabled'],
    };
}

