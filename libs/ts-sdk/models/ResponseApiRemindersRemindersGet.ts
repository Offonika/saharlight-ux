/* tslint:disable */
/* eslint-disable */
/**
 * Diabetes Assistant API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { ReminderSchema } from './ReminderSchema';
import {
    instanceOfReminderSchema,
    ReminderSchemaFromJSON,
    ReminderSchemaFromJSONTyped,
    ReminderSchemaToJSON,
} from './ReminderSchema';

/**
 * @type ResponseApiRemindersRemindersGet
 * 
 * @export
 */
export type ResponseApiRemindersRemindersGet = Array<ReminderSchema> | ReminderSchema;

export function ResponseApiRemindersRemindersGetFromJSON(json: any): ResponseApiRemindersRemindersGet {
    return ResponseApiRemindersRemindersGetFromJSONTyped(json, false);
}

export function ResponseApiRemindersRemindersGetFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseApiRemindersRemindersGet {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfReminderSchema(json)) {
        return ReminderSchemaFromJSONTyped(json, true);
    }
    if (Array.isArray(json)) {
        if (json.every(item => typeof item === 'object')) {
            if (json.every(item => instanceOfReminderSchema(item))) {
                return json.map(value => ReminderSchemaFromJSONTyped(value, true));
            }
        }
        return json;
    }

    return {} as any;
}

export function ResponseApiRemindersRemindersGetToJSON(json: any): any {
    return ResponseApiRemindersRemindersGetToJSONTyped(json, false);
}

export function ResponseApiRemindersRemindersGetToJSONTyped(value?: ResponseApiRemindersRemindersGet | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfReminderSchema(value)) {
        return ReminderSchemaToJSON(value as ReminderSchema);
    }
    if (Array.isArray(value)) {
        if (value.every(item => typeof item === 'object')) {
            if (value.every(item => instanceOfReminderSchema(item))) {
                return value.map(value => ReminderSchemaToJSON(value as ReminderSchema));
            }
        }
        return value;
    }

    return {};
}

