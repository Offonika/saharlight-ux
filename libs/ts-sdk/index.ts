/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/profiles": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Profiles Get */
        get: operations["profiles_get_profiles_get"];
        put?: never;
        /** Profiles Post */
        post: operations["profiles_post_profiles_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reminders": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Api Reminders */
        get: operations["api_reminders_reminders_get"];
        put?: never;
        /** Api Reminders Post */
        post: operations["api_reminders_post_reminders_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/timezone": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Timezone */
        get: operations["get_timezone_timezone_get"];
        /** Put Timezone */
        put: operations["put_timezone_timezone_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/profile/self": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Profile Self */
        get: operations["profile_self_profile_self_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/stats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Stats */
        get: operations["get_stats_stats_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/analytics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Analytics */
        get: operations["get_analytics_analytics_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create User
         * @description Ensure a user exists in the database.
         */
        post: operations["create_user_user_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/history": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get History
         * @description Return history records for the authenticated user.
         */
        get: operations["get_history_history_get"];
        put?: never;
        /**
         * Post History
         * @description Save or update a history record in the database.
         */
        post: operations["post_history_history_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/history/{record_id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * Delete History
         * @description Delete a history record after verifying ownership.
         */
        delete: operations["delete_history_history__record_id__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AnalyticsPoint */
        AnalyticsPoint: {
            /** Date */
            date: string;
            /** Sugar */
            sugar: number;
        };
        /** DayStats */
        DayStats: {
            /** Sugar */
            sugar: number;
            /** Breadunits */
            breadUnits: number;
            /** Insulin */
            insulin: number;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /**
         * HistoryRecordSchema
         * @description Schema for user history records.
         */
        "HistoryRecordSchema-Input": {
            /** Id */
            id: string;
            /**
             * Date
             * Format: date
             */
            date: string;
            /**
             * Time
             * Format: time
             */
            time: string;
            /** Sugar */
            sugar?: number | null;
            /** Carbs */
            carbs?: number | null;
            /** Breadunits */
            breadUnits?: number | null;
            /** Insulin */
            insulin?: number | null;
            /** Notes */
            notes?: string | null;
            /**
             * Type
             * @enum {string}
             */
            type: "measurement" | "meal" | "insulin";
        };
        /**
         * HistoryRecordSchema
         * @description Schema for user history records.
         */
        "HistoryRecordSchema-Output": {
            /** Id */
            id: string;
            /** Date */
            date: string;
            /** Time */
            time: string;
            /** Sugar */
            sugar?: number | null;
            /** Carbs */
            carbs?: number | null;
            /** Breadunits */
            breadUnits?: number | null;
            /** Insulin */
            insulin?: number | null;
            /** Notes */
            notes?: string | null;
            /**
             * Type
             * @enum {string}
             */
            type: "measurement" | "meal" | "insulin";
        };
        /** ProfileSchema */
        ProfileSchema: {
            /** Telegram Id */
            telegramId: number;
            /** Icr */
            icr: number;
            /** Cf */
            cf: number;
            /** Target */
            target: number;
            /** Low */
            low: number;
            /** High */
            high: number;
            /** Org Id */
            orgId?: number | null;
        };
        /** ReminderSchema */
        ReminderSchema: {
            /** Telegram Id */
            telegramId: number;
            /** Id */
            id?: number | null;
            /** Type */
            type: string;
            /** Time */
            time?: string | null;
            /** Interval Hours */
            intervalHours?: number | null;
            /** Minutes After */
            minutesAfter?: number | null;
            /**
             * Is Enabled
             * @default true
             */
            isEnabled: boolean;
            /** Org Id */
            orgId?: number | null;
        };
        /** Timezone */
        Timezone: {
            /** Tz */
            tz: string;
        };
        /**
         * UserContext
         * @description Telegram user data supplied via WebApp init data.
         */
        UserContext: {
            /** Id */
            id: number;
            /** First Name */
            first_name?: string;
            /** Last Name */
            last_name?: string;
            /** Username */
            username?: string;
            /** Language Code */
            language_code?: string;
            /** Is Premium */
            is_premium?: boolean;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** WebUser */
        WebUser: {
            /** Telegram Id */
            telegramId: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    profiles_get_profiles_get: {
        parameters: {
            query: {
                telegramId: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ProfileSchema"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    profiles_post_profiles_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ProfileSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    api_reminders_reminders_get: {
        parameters: {
            query: {
                telegramId: number;
                id?: number | null;
            };
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    }[] | {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    api_reminders_post_reminders_post: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ReminderSchema"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_timezone_timezone_get: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    put_timezone_timezone_put: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Timezone"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    profile_self_profile_self_get: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserContext"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_stats_stats_get: {
        parameters: {
            query: {
                telegramId: number;
            };
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DayStats"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_analytics_analytics_get: {
        parameters: {
            query: {
                telegramId: number;
            };
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AnalyticsPoint"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    create_user_user_post: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["WebUser"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_history_history_get: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HistoryRecordSchema-Output"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    post_history_history_post: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["HistoryRecordSchema-Input"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_history_history__record_id__delete: {
        parameters: {
            query?: never;
            header?: {
                "X-Telegram-Init-Data"?: string | null;
            };
            path: {
                record_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: string;
                    };
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
