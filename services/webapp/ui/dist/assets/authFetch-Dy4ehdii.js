var S=Object.defineProperty;var b=(e,r,t)=>r in e?S(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var c=(e,r,t)=>b(e,typeof r!="symbol"?r+"":r,t);import{t as T}from"./index-DQBQ-MfV.js";const q="http://localhost".replace(/\/+$/,"");class I{constructor(r={}){this.configuration=r}set config(r){this.configuration=r}get basePath(){return this.configuration.basePath!=null?this.configuration.basePath:q}get fetchApi(){return this.configuration.fetchApi}get middleware(){return this.configuration.middleware||[]}get queryParamsStringify(){return this.configuration.queryParamsStringify||y}get username(){return this.configuration.username}get password(){return this.configuration.password}get apiKey(){const r=this.configuration.apiKey;if(r)return typeof r=="function"?r:()=>r}get accessToken(){const r=this.configuration.accessToken;if(r)return typeof r=="function"?r:async()=>r}get headers(){return this.configuration.headers}get credentials(){return this.configuration.credentials}}const O=new I,f=class f{constructor(r=O){c(this,"middleware");c(this,"fetchApi",async(r,t)=>{let n={url:r,init:t};for(const o of this.middleware)o.pre&&(n=await o.pre({fetch:this.fetchApi,...n})||n);let i;try{i=await(this.configuration.fetchApi||fetch)(n.url,n.init)}catch(o){for(const s of this.middleware)s.onError&&(i=await s.onError({fetch:this.fetchApi,url:n.url,init:n.init,error:o,response:i?i.clone():void 0})||i);if(i===void 0)throw o instanceof Error?new N(o,"The request failed and the interceptors did not return an alternative response"):o}for(const o of this.middleware)o.post&&(i=await o.post({fetch:this.fetchApi,url:n.url,init:n.init,response:i.clone()})||i);return i});this.configuration=r,this.middleware=r.middleware}withMiddleware(...r){const t=this.clone();return t.middleware=t.middleware.concat(...r),t}withPreMiddleware(...r){const t=r.map(n=>({pre:n}));return this.withMiddleware(...t)}withPostMiddleware(...r){const t=r.map(n=>({post:n}));return this.withMiddleware(...t)}isJsonMime(r){return r?f.jsonRegex.test(r):!1}async request(r,t){const{url:n,init:i}=await this.createFetchParams(r,t),o=await this.fetchApi(n,i);if(o&&o.status>=200&&o.status<300)return o;throw new J(o,"Response returned an error code")}async createFetchParams(r,t){let n=this.configuration.basePath+r.path;r.query!==void 0&&Object.keys(r.query).length!==0&&(n+="?"+this.configuration.queryParamsStringify(r.query));const i=Object.assign({},this.configuration.headers,r.headers);Object.keys(i).forEach(p=>i[p]===void 0?delete i[p]:{});const o=typeof t=="function"?t:async()=>t,s={method:r.method,headers:i,body:r.body,credentials:this.configuration.credentials},a={...s,...await o({init:s,context:r})};let l;F(a.body)||a.body instanceof URLSearchParams||E(a.body)?l=a.body:this.isJsonMime(i["Content-Type"])?l=JSON.stringify(a.body):l=a.body;const R={...a,body:l};return{url:n,init:R}}clone(){const r=this.constructor,t=new r(this.configuration);return t.middleware=this.middleware.slice(),t}};c(f,"jsonRegex",new RegExp("^(:?application/json|[^;/ 	]+/[^;/ 	]+[+]json)[ 	]*(:?;.*)?$","i"));let m=f;function E(e){return typeof Blob<"u"&&e instanceof Blob}function F(e){return typeof FormData<"u"&&e instanceof FormData}class J extends Error{constructor(t,n){super(n);c(this,"name","ResponseError");this.response=t}}class N extends Error{constructor(t,n){super(n);c(this,"name","FetchError");this.cause=t}}class u extends Error{constructor(t,n){super(n);c(this,"name","RequiredError");this.field=t}}function y(e,r=""){return Object.keys(e).map(t=>P(t,e[t],r)).filter(t=>t.length>0).join("&")}function P(e,r,t=""){const n=t+(t.length?`[${e}]`:e);if(r instanceof Array){const i=r.map(o=>encodeURIComponent(String(o))).join(`&${encodeURIComponent(n)}=`);return`${encodeURIComponent(n)}=${i}`}if(r instanceof Set){const i=Array.from(r);return P(e,i,t)}return r instanceof Date?`${encodeURIComponent(n)}=${encodeURIComponent(r.toISOString())}`:r instanceof Object?y(r,n):`${encodeURIComponent(n)}=${encodeURIComponent(String(r))}`}class d{constructor(r,t=n=>n){this.raw=r,this.transformer=t}async value(){return this.transformer(await this.raw.json())}}function A(e){return G(e)}function G(e,r){return e==null?e:{telegramId:e.telegram_id,icr:e.icr,cf:e.cf,target:e.target,low:e.low,high:e.high,orgId:e.org_id==null?void 0:e.org_id}}function D(e){return _(e,!1)}function _(e,r=!1){return e==null?e:{telegram_id:e.telegramId,icr:e.icr,cf:e.cf,target:e.target,low:e.low,high:e.high,org_id:e.orgId}}function w(e){return!(!("telegramId"in e)||e.telegramId===void 0||!("type"in e)||e.type===void 0)}function g(e,r){return e==null?e:{telegramId:e.telegram_id,id:e.id==null?void 0:e.id,type:e.type,time:e.time==null?void 0:e.time,intervalHours:e.interval_hours==null?void 0:e.interval_hours,isEnabled:e.is_enabled==null?void 0:e.is_enabled}}function C(e){return z(e,!1)}function z(e,r=!1){return e==null?e:{telegram_id:e.telegramId,id:e.id,type:e.type,time:e.time,interval_hours:e.intervalHours,is_enabled:e.isEnabled}}function $(e){return U(e)}function U(e,r){return e==null||typeof e!="object"?e:w(e)?g(e):Array.isArray(e)?e.every(t=>typeof t=="object")&&e.every(t=>w(t))?e.map(t=>g(t)):e:{}}function M(e){return K(e)}function K(e,r){return e==null?e:{status:e.status==null?void 0:e.status,id:e.id==null?void 0:e.id}}function h(e){return v(e)}function v(e,r){return e==null?e:{status:e.status}}function H(e){return B(e,!1)}function B(e,r=!1){return e==null?e:{telegram_id:e.telegramId,tz:e.tz}}class V extends m{async healthGetRaw(r){const t={},n={},o=await this.request({path:"/health",method:"GET",headers:n,query:t},r);return new d(o,s=>h(s))}async healthGet(r){return await(await this.healthGetRaw(r)).value()}async profilesGetRaw(r,t){if(r.telegramId==null)throw new u("telegramId",'Required parameter "telegramId" was null or undefined when calling profilesGet().');const n={};r.telegramId!=null&&(n.telegram_id=r.telegramId);const i={},s=await this.request({path:"/profiles",method:"GET",headers:i,query:n},t);return new d(s,a=>A(a))}async profilesGet(r,t){return await(await this.profilesGetRaw(r,t)).value()}async profilesPostRaw(r,t){if(r.profile==null)throw new u("profile",'Required parameter "profile" was null or undefined when calling profilesPost().');const n={},i={};i["Content-Type"]="application/json";const s=await this.request({path:"/profiles",method:"POST",headers:i,query:n,body:D(r.profile)},t);return new d(s,a=>h(a))}async profilesPost(r,t){return await(await this.profilesPostRaw(r,t)).value()}async remindersGetRaw(r,t){if(r.telegramId==null)throw new u("telegramId",'Required parameter "telegramId" was null or undefined when calling remindersGet().');const n={};r.telegramId!=null&&(n.telegram_id=r.telegramId),r.id!=null&&(n.id=r.id);const i={},s=await this.request({path:"/api/reminders",method:"GET",headers:i,query:n},t);return new d(s,a=>$(a))}async remindersGet(r,t){return await(await this.remindersGetRaw(r,t)).value()}async remindersPostRaw(r,t){if(r.reminder==null)throw new u("reminder",'Required parameter "reminder" was null or undefined when calling remindersPost().');const n={},i={};i["Content-Type"]="application/json";const s=await this.request({path:"/api/reminders",method:"POST",headers:i,query:n,body:C(r.reminder)},t);return new d(s,a=>M(a))}async remindersPost(r,t){return await(await this.remindersPostRaw(r,t)).value()}async timezonePutRaw(r,t){if(r.timezone==null)throw new u("timezone",'Required parameter "timezone" was null or undefined when calling timezonePut().');const n={},i={};i["Content-Type"]="application/json";const s=await this.request({path:"/timezone",method:"PUT",headers:i,query:n,body:H(r.timezone)},t);return new d(s,a=>h(a))}async timezonePut(r,t){return await(await this.timezonePutRaw(r,t)).value()}}function k(e,r={}){return T(e,{...r,credentials:"include"})}export{I as C,V as D,J as R,k as a};
